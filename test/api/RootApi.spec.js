/*
 * LaunchDarkly REST API
 * Build custom integrations with the LaunchDarkly REST API
 *
 * OpenAPI spec version: 5.0.3
 * Contact: support@launchdarkly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LaunchDarklyApi);
  }
}(this, function(expect, LaunchDarklyApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LaunchDarklyApi.RootApi();
  });

  describe('(package)', function() {
    describe('RootApi', function() {
      describe('getRoot', function() {
        it('should call getRoot successfully', function(done) {
          // TODO: uncomment getRoot call and complete the assertions
          /*

          instance.getRoot(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(LaunchDarklyApi.Links);
            expect(data.self).to.be.a(LaunchDarklyApi.Link);
                  expect(data.self.href).to.be.a('string');
              expect(data.self.href).to.be("/api/v2/endpoint");
              expect(data.self.type).to.be.a('string');
              expect(data.self.type).to.be("application/json");
            expect(data.next).to.be.a(LaunchDarklyApi.Link);
                  expect(data.next.href).to.be.a('string');
              expect(data.next.href).to.be("/api/v2/endpoint");
              expect(data.next.type).to.be.a('string');
              expect(data.next.type).to.be("application/json");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));

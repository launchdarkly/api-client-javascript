/*
 * LaunchDarkly REST API
 * Build custom integrations with the LaunchDarkly REST API
 *
 * OpenAPI spec version: 5.1.0
 * Contact: support@launchdarkly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LaunchDarklyApi);
  }
}(this, function(expect, LaunchDarklyApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('UserTargetingExpirationResourceIdForFlag', function() {
      beforeEach(function() {
        instance = new LaunchDarklyApi.UserTargetingExpirationResourceIdForFlag();
      });

      it('should create an instance of UserTargetingExpirationResourceIdForFlag', function() {
        // TODO: update the code to test UserTargetingExpirationResourceIdForFlag
        expect(instance).to.be.a(LaunchDarklyApi.UserTargetingExpirationResourceIdForFlag);
      });

      it('should have the property kind (base name: "kind")', function() {
        // TODO: update the code to test the property kind
        expect(instance).to.have.property('kind');
        // expect(instance.kind).to.be(expectedValueLiteral);
      });

      it('should have the property projectKey (base name: "projectKey")', function() {
        // TODO: update the code to test the property projectKey
        expect(instance).to.have.property('projectKey');
        // expect(instance.projectKey).to.be(expectedValueLiteral);
      });

      it('should have the property environmentKey (base name: "environmentKey")', function() {
        // TODO: update the code to test the property environmentKey
        expect(instance).to.have.property('environmentKey');
        // expect(instance.environmentKey).to.be(expectedValueLiteral);
      });

      it('should have the property flagKey (base name: "flagKey")', function() {
        // TODO: update the code to test the property flagKey
        expect(instance).to.have.property('flagKey');
        // expect(instance.flagKey).to.be(expectedValueLiteral);
      });

      it('should have the property key (base name: "key")', function() {
        // TODO: update the code to test the property key
        expect(instance).to.have.property('key');
        // expect(instance.key).to.be(expectedValueLiteral);
      });

    });
  });

}));

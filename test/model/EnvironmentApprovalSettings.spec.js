/*
 * LaunchDarkly REST API
 * Build custom integrations with the LaunchDarkly REST API
 *
 * OpenAPI spec version: 5.3.0
 * Contact: support@launchdarkly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LaunchDarklyApi);
  }
}(this, function(expect, LaunchDarklyApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('EnvironmentApprovalSettings', function() {
      beforeEach(function() {
        instance = new LaunchDarklyApi.EnvironmentApprovalSettings();
      });

      it('should create an instance of EnvironmentApprovalSettings', function() {
        // TODO: update the code to test EnvironmentApprovalSettings
        expect(instance).to.be.a(LaunchDarklyApi.EnvironmentApprovalSettings);
      });

      it('should have the property serviceKind (base name: "serviceKind")', function() {
        // TODO: update the code to test the property serviceKind
        expect(instance).to.have.property('serviceKind');
        // expect(instance.serviceKind).to.be(expectedValueLiteral);
      });

      it('should have the property required (base name: "required")', function() {
        // TODO: update the code to test the property required
        expect(instance).to.have.property('required');
        // expect(instance.required).to.be(expectedValueLiteral);
      });

      it('should have the property canReviewOwnRequest (base name: "canReviewOwnRequest")', function() {
        // TODO: update the code to test the property canReviewOwnRequest
        expect(instance).to.have.property('canReviewOwnRequest');
        // expect(instance.canReviewOwnRequest).to.be(expectedValueLiteral);
      });

      it('should have the property minNumApprovals (base name: "minNumApprovals")', function() {
        // TODO: update the code to test the property minNumApprovals
        expect(instance).to.have.property('minNumApprovals');
        // expect(instance.minNumApprovals).to.be(expectedValueLiteral);
      });

      it('should have the property canApplyDeclinedChanges (base name: "canApplyDeclinedChanges")', function() {
        // TODO: update the code to test the property canApplyDeclinedChanges
        expect(instance).to.have.property('canApplyDeclinedChanges');
        // expect(instance.canApplyDeclinedChanges).to.be(expectedValueLiteral);
      });

      it('should have the property requiredApprovalTags (base name: "requiredApprovalTags")', function() {
        // TODO: update the code to test the property requiredApprovalTags
        expect(instance).to.have.property('requiredApprovalTags');
        // expect(instance.requiredApprovalTags).to.be(expectedValueLiteral);
      });

    });
  });

}));
